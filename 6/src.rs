fn is_tree(position: usize, line: &str)->bool{
    let s_line = String::from(line);
    let is_a_tree:bool = match s_line.chars().nth(position){
        Some(c) => c == '#',
        _ => false, 
    };
    is_a_tree
}

fn count_tree_in_slope(right: usize, down: usize, line: [&str;323])->usize{
    
    let mut count = 0;
    let mut position:usize=0;
    for line in line.iter().step_by(down){
        if is_tree(position, line){
            count +=1;
        }
        position += right;
        position = position % 31;
    }
    count
}

fn main(){
    let slice_map: [&str

                                "....#..##......#.......##......", "....#....##.#...#.#..#....#...#", ".#...........#..#....##...#..##", "..#.#.................###.#...#", "..#.#.#...##...........#.......", "..........#..##...#.#..##....##", "........#........#.##..#.#...#.", ".....#...##.......##......#...#", "....#...#..#..#.....#..........", ".#..#......#..#..#..###.......#", ".##..........#...#...#.#.....##", "..#..........#.#.#...###.......", "....#................#...##....", ".##..#....#..........#.#.#.....", "..##...#.#........#.....#.##...", "....####.....#..#.........##..#", "......#.........#...#..........", "....#...................#..##..", ".##....#.#.........#....#...#..", "....##...##.....#..####........", "..##.#....#.#.......##...#.....", "#...#.#.#...#..#..##.....#.....", "#..................###.....#...", "#.#.....#.......#.#...###.#....", ".#..#....#............#........", "#.#....#..#.#...............#..", "..#..#..#.............#......#.", "..#.......##...................", ".#....#.........#....#.#.#..#..", "....#....#..#...............#..", "......#..#..##......#.........#", "..#.##........##......#..#..#.#", "#.....#.#....#.........##...#..", "###..............#....###...##.", "....#..##......#.......##......", "......#...#.##......##....#..#.", "..........#....#..##.......#..#", ".#..#...##..#...........#..#..#", ".....#....#...#..###...###....#", ".#####..#...#.#.#..#.#.###...##", "..##............##.#...#.##...#", ".##..#...#...#....##.#..#..##..", ".#....#...#............##..#...", ".#.#......#....#....#..##..##..", ".........#...#.......#.##..#...", "#.........#.....##.....#..#..#.", "...##.#...#...#..#..#....##..##", ".#............#...#....##......", "..#...#.##.........#.#......#.#", 





    let r1d1 = count_tree_in_slope(1,1,slice_map);
    let r3d1 = count_tree_in_slope(3,1,slice_map);
    let r5d1 = count_tree_in_slope(5,1,slice_map);
    let r7d1 = count_tree_in_slope(7,1,slice_map);
    let r1d2 = count_tree_in_slope(1,2,slice_map);

    println!("{}",r1d1*r3d1*r5d1*r7d1*r1d2);
}